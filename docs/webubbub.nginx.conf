# This is an example file to serve Webubbub in production.
# You should obviously adapt some sections to your needs, such the
# `server_name` directives and paths.
# Note itâ€™s important to serve Webubbub over HTTPS to be trustworthy.

server {
  listen 80;
  listen [::]:80;

  server_name websub.example.com;

  # redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name websub.example.com;

  # You MUST set root to the public directory for security reasons!
  root /var/www/Webubbub/public;
  index index.php;

  location / {
    try_files $uri $uri/ /index.php$is_args$query_string;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_pass 127.0.0.1:9000;
    # This also can be a Unix socket:
    # fastcgi_pass unix:/var/run/php-fpm.sock;

    fastcgi_split_path_info ^(.+\.php)(/.*)$;

    # Bypass the fact that try_files resets $fastcgi_path_info
    # see: http://trac.nginx.org/nginx/ticket/321
    set $path_info $fastcgi_path_info;
    fastcgi_param PATH_INFO $path_info;

    include fastcgi.conf;
  }

  error_log /var/log/nginx/websub.example.com_error.log;
  access_log /var/log/nginx/websub.example.com_access.log;

  # HTTPS is very important so subscribers and publishers are sure to speak
  # to the correct server by a secure way.
  ssl_certificate /etc/letsencrypt/live/websub.example.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/websub.example.com/privkey.pem;
}
